# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI

on:
  push:
    branches: [ "savannah/feature/14" ]
  pull_request:
    branches: [ "savannah/feature/14" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: | 
              ~/.gradle/caches
              ~/.gradle/wrapper
          key: ${{runner.os}}-gradle-${{hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys:
            ${{runner.os}}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: make application.yml
        run:
          mkdir ./src/main/resources |
          touch ./src/main/resources/application.yml
        shell: bash

      - name: deliver application.yml
        run: echo "${{secrets.APPLICATION}}" > ./src/main/resources/application.yml
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        
      - name: Test with Gradle
        run: ./gradlew --info test

      # Object Storage에 업로드할 파일만 모을 server 디렉터리 생성
      - name: make server directory
        run:  mkdir -p server

      # 1. Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./server

      # 3. script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./server

      # 파일 압축
      - name: Make zip file and move to server directory
        run: zip -r ./wontu-webserver.zip ./server

      # S3에 업로드
      - name: upload build file to NCP Object Storage
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws --endpoint-url=https://kr.object.ncloudstorage.com \
          s3 cp ./wontu-webserver.zip \
          --region ap-northeast-2 \
          s3://wontu-object-storage-bucket
 
      - name: GET projectList using curl
        run: ./requestDeploy.sh
